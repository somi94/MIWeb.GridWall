prototype(MIWeb.GridWall:GridWall) < prototype(Neos.Neos:Content) {
	attributes.class.gridwall = 'miweb-gridwall'

	attributes.data-gridwall = TYPO3.TypoScript:RawArray {
		zoom             = ${q(node).property('cssEase') ? q(node).property('cssEase') : 'ease-out'}
		#adaptiveHeight      = ${q(node).property('adaptiveHeight') ? true : false}
		#autoplay            = ${q(node).property('autoplay') ? true : false}
		#autoplay.@if.fe     = ${node.context.workspace.name == 'live'}
		#autoplaySpeed       = ${q(node).property('autoplaySpeed') ? q(node).property('autoplaySpeed') : 3000}
		#mobileFirst         = ${true}
	}
	attributes.data-gridwall.@process.toJson = ${Json.stringify(value)}

	@context.gridwallContainerAttributes = ${this.attributes}

	gridElementCount = ${q(node).children().count()}
	gridContent = TYPO3.TypoScript:Tag {
		tagName = 'div'
		attributes = ${gridwallContainerAttributes}

		content = TYPO3.TypoScript:Collection {
			collection = ${q(node).children()}
			itemRenderer = MIWeb.GridWall:GridWallElement
			itemName = 'node'
			iterationName = 'iterator'
		}
		# Add additional wrapping to outer DIV, because otherwise
		# CreateJS won't work. It requires elements of ContentCollection
		# to be direct children of ContentCollection).
		# TODO: Can be removed when createjs is dropped.
		@process.contentElementWrapping = TYPO3.Neos:ContentElementWrapping
	}
	#@process.wrapRemover = M12.Utils:WrapRemover
	#@process.wrapRemover.wrapperClass = 'extra-wrapper-required-by-neos-backend'
}

prototype(MIWeb.GridWall:GridWallElement) < prototype(TYPO3.TypoScript:Tag) {
	attributes.class = 'gridwall-element'

	content = TYPO3.Neos:ContentCase
	@process.contentElementWrapping = TYPO3.Neos:ContentElementWrapping
}
